------------->Seaborn<-------- 1er Parte (minutos 0:16 a 5:15 ) Ahora analizaremos los datos obtenidos de la clase anterior, para ello utilizaremos " seaborn ". 1. NOTA: Notese que, en codigo, seaborn se sigue viendo escribiendo como "import seaborn as sns ". 2. Ahora le explicamos a Colab que importe la informacion vista anteriormente, para ello usamos "import matplotlib.pylot as plt" 3. Con estas dos librerias importadas, utilizaremos seaborn para darle estilo a los graficos. Para ello se escribe " sns.set (style='whitegrid', context = 'notebook') " --------> En otras palabras: + "sns" significa seaborn. (por ende "sns.set (continua) ", significa que estas especificando la configuracion de seaborn) +(continua)..." style = 'whitegrid', siguiente formato ", que significa el diseno y color qu va a tener la grafica. +(siguiente formato) " ,context = 'notebook' ) ", que significa que la grafica estara en un formato de "notebook" (o libreta en espanol), y con eso - Segun el profe Luis- se ve mejor. -----------> Hasta este punto, debido al hecho de que son 13 varibles, no resulta facil para que las leamos, por eso seleccionaremos solo las 5 variables mas importantes, y asi hacerlas mas faciles de leer. 4. Es por eso que se usa la variable " cols = [ 'DIS', 'INDUS', 'CRIM', 'RM', 'MEDV' ] " + "DIS" fue dado en el documento de los encabezados, este significa "Distancia desde el punto analizado a los 5 distritos mas importantes de Boston" + "INDUS" (encabezado del mismo documento), significa "Indice de Industrias que hay dentro de " + "CRIM", es "Indice de Criminalidad" + "RM", es el "Promedio de las Casas" (Mas notese que es la abreviacion de "Room") +'MEDV', es la "Mediana de los Precios", esta sera la variable mas importante porque es la que se predicira. 5. Ahora, podemos hacer nuestro primer grafico (asta' aora' facil no? üôÉxd). El cual se invoca con lo siguiente " sns.pairplot ( df [cols] ), height = 2.5) enter " ---------->ok, paso a paso: + " sns.pairplot (continua) ", sabemos ya " sns " significa seaborn, mas este caso ahora usamos " .pairplot ", que segun Google, es una matriz de "scatterplots" que nos permite entender la relation entre diferentes variables en Data Science. Se abre pararentesis para desarrollarlo / especificarlo mas, + (continua) " ( df [ *siguente *], ". Entonces, "df" es la otra manera de decir " def " (recuerdas que eso nos ayudaba a "definir una funcion "?, bueno, al final es lo mismo ). + [siguiente] " [cols] " esto es para referenciarle a la computadora (o decirle de donde sacar los datos), en este caso sera de "cols", el cual es el nombre de la variable que contiene todos los encabezados. Lo cual se vio en la clase pasada. + Por ultimo "height = 2.5", uff... este es solo para aclarar la altura a la que estara parte de la grafica (pienso es la ditancia entre renglon y renglonü§∑‚Äç‚ôÇÔ∏è lol )


6. Terminados con un "plt.show( )", para mostrar el grafico.
      +Segun Google, es la funcion que nos ayuda a mostrar todas las graficas que han sido (o no) correctamente programadas.
