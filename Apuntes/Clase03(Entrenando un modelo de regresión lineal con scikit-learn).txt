------>Regresion lineal / Scikit-learn<-------- (minutos 7:24 a 13:34) Parte 2

Ïƒ Objetivo principal es graficar, se tienen dos variables, se tiene que graficar. 1. " plt.scatter(X_std,y_std) " +Esto nos ayuda a mostrar los datos de los que se esta haciendo la prediccion. +En donde la variable X = estandarizado de las casas. Y = la mediana de los precios. 6. Utilizar un plot para ver como esta haciendo las predicciones. Utilizando "plt.plot(X_std,slr.predict(X_std), color='R') " + Basicamente diciendole al modelo, ya creaste una linea recta, ahora utiliza los valores que conoces de x para crear predicciones +Y no solo eso sino, que lo ponga la linea en un color Rojo. ----------->Antes de continuar, Luis quiere aplicar una etiqueta a las X and Y axis en la grafica, para ello usa : " plt.ylabel("Mediana del precio de las casas en miles [MEDV]") " " plt.xlabel("Promedio de habitaciones [RM]")" +Para nombrar el valor de las X como "Promedio de habitaciones" +Para nombrar el valor de las Y como "Promedio de habitaciones" -----------> Con el modelo ya generado se pueden hacer predicciones. En este ejemplo imaginemos cuales es la mediana del precio de una casa de 5 habitanciones. 7. " num_habitaciones = 5 " + Solo establecemos el numero de de la variable. (luego estableceremos la varible en si). 8. " num_habitaciones_std= sc_x.transform(np.array([num_habitaciones]).reshape(-1,1)) " ----------> UFF muchas cosas estan ocurriendo aqui. + El objetivo ahora es especificar a la computadora lo que se va a hacer con " num_habitaciones " + Lo primero que hace es "estandarizar el numero" a traves de poner un " _std " + Continua con un "sc_x.transform ( " + Pero tambien tiene que especificar que es un "arreglo de numpy" (el cual lo abrevio como np) entonces se pone nombre de la variabla.array OR " (np.array( " + Interesante, Luis escribe " [num_habitaciones] ", lo cual ya sabemos que es la varible con la que quiere trabajar. Mas esta en formato de " lista " OR " [ ] ", y esto es para que se vea mejor. +" .reshape(-1,1)) " Esto segun Google, es para que no tener que especificar las dimensiones of the axis. ðŸ˜® ----------> Una vez teniendo el valor estandarizado que se quiere predecir. 9. Ahora solo queda presentar los graficos con titulo que le de sentido. " print("El precio de una casa con 5 habitaciones en Boston es de ",sc_y.inverse_transform(slr.predict(num_habitaciones_std))). ----------> Oh yeah baby ðŸ˜Ž estas lineas de codigo son las buenas. +Empezando con algo facil, "print (" blah blah... " eso ya sabemos es un string. + Sin embargo, es portante saber que la grafica se entienda mejor, debera primero aplicarse la inversa del y-axis. Es to se hace con un ",sc_y.inverse_transform", de lo que se quiere predecir. +Que en este caso lo que se quiere predecir es el numero de habitaciones el cual es " (slr.predict(num_habitaciones_std)) "

